// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ov5640_GaussianBlur_HH_
#define _ov5640_GaussianBlur_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Block_proc.h"
#include "AXIvideo2Mat.h"
#include "Split.h"
#include "GaussianBlur162.h"
#include "GaussianBlur163.h"
#include "GaussianBlur.h"
#include "Merge.h"
#include "Mat2AXIvideo.h"
#include "fifo_w10_d2_A.h"
#include "fifo_w11_d2_A.h"
#include "fifo_w10_d5_A.h"
#include "fifo_w11_d5_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_Merge_U0.h"
#include "start_for_Split_U0.h"
#include "start_for_GaussiajbC.h"
#include "start_for_GaussiakbM.h"
#include "start_for_GaussialbW.h"
#include "start_for_Mat2AXImb6.h"

namespace ap_rtl {

struct ov5640_GaussianBlur : public sc_module {
    // Port declarations 20
    sc_in< sc_lv<24> > INPUT_STREAM_TDATA;
    sc_in< sc_lv<3> > INPUT_STREAM_TKEEP;
    sc_in< sc_lv<3> > INPUT_STREAM_TSTRB;
    sc_in< sc_lv<1> > INPUT_STREAM_TUSER;
    sc_in< sc_lv<1> > INPUT_STREAM_TLAST;
    sc_in< sc_lv<1> > INPUT_STREAM_TID;
    sc_in< sc_lv<1> > INPUT_STREAM_TDEST;
    sc_out< sc_lv<24> > OUTPUT_STREAM_TDATA;
    sc_out< sc_lv<3> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<3> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TDEST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ov5640_GaussianBlur(sc_module_name name);
    SC_HAS_PROCESS(ov5640_GaussianBlur);

    ~ov5640_GaussianBlur();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Block_proc* Block_proc_U0;
    AXIvideo2Mat* AXIvideo2Mat_U0;
    Split* Split_U0;
    GaussianBlur162* GaussianBlur162_U0;
    GaussianBlur163* GaussianBlur163_U0;
    GaussianBlur* GaussianBlur_U0;
    Merge* Merge_U0;
    Mat2AXIvideo* Mat2AXIvideo_U0;
    fifo_w10_d2_A* img_0_rows_V_c_U;
    fifo_w11_d2_A* img_0_cols_V_c_U;
    fifo_w10_d5_A* img_1_rows_V_c_U;
    fifo_w11_d5_A* img_1_cols_V_c_U;
    fifo_w8_d2_A* img_0_data_stream_0_U;
    fifo_w8_d2_A* img_0_data_stream_1_U;
    fifo_w8_d2_A* img_0_data_stream_2_U;
    fifo_w10_d2_A* img_0_rows_V_c20_U;
    fifo_w11_d2_A* img_0_cols_V_c21_U;
    fifo_w8_d2_A* img_B_data_stream_0_U;
    fifo_w8_d2_A* img_G_data_stream_0_U;
    fifo_w8_d2_A* img_R_data_stream_0_U;
    fifo_w8_d2_A* img_B_f_data_stream_s_U;
    fifo_w8_d2_A* img_G_f_data_stream_s_U;
    fifo_w8_d2_A* img_R_f_data_stream_s_U;
    fifo_w8_d2_A* img_1_data_stream_0_U;
    fifo_w8_d2_A* img_1_data_stream_1_U;
    fifo_w8_d2_A* img_1_data_stream_2_U;
    fifo_w10_d2_A* img_1_rows_V_c22_U;
    fifo_w11_d2_A* img_1_cols_V_c23_U;
    start_for_Merge_U0* start_for_Merge_U0_U;
    start_for_Split_U0* start_for_Split_U0_U;
    start_for_GaussiajbC* start_for_GaussiajbC_U;
    start_for_GaussiakbM* start_for_GaussiakbM_U;
    start_for_GaussialbW* start_for_GaussialbW_U;
    start_for_Mat2AXImb6* start_for_Mat2AXImb6_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > Block_proc_U0_ap_start;
    sc_signal< sc_logic > Block_proc_U0_ap_done;
    sc_signal< sc_logic > Block_proc_U0_ap_continue;
    sc_signal< sc_logic > Block_proc_U0_ap_idle;
    sc_signal< sc_logic > Block_proc_U0_ap_ready;
    sc_signal< sc_logic > Block_proc_U0_start_out;
    sc_signal< sc_logic > Block_proc_U0_start_write;
    sc_signal< sc_lv<10> > Block_proc_U0_img_0_rows_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_img_0_rows_V_out_write;
    sc_signal< sc_lv<11> > Block_proc_U0_img_0_cols_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_img_0_cols_V_out_write;
    sc_signal< sc_lv<10> > Block_proc_U0_img_1_rows_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_img_1_rows_V_out_write;
    sc_signal< sc_lv<11> > Block_proc_U0_img_1_cols_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_img_1_cols_V_out_write;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_out;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_write;
    sc_signal< sc_logic > AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_rows_V_read;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_0_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_1_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_2_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_2_V_write;
    sc_signal< sc_lv<10> > AXIvideo2Mat_U0_img_rows_V_out_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_rows_V_out_write;
    sc_signal< sc_lv<11> > AXIvideo2Mat_U0_img_cols_V_out_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_cols_V_out_write;
    sc_signal< sc_logic > Split_U0_ap_start;
    sc_signal< sc_logic > Split_U0_start_full_n;
    sc_signal< sc_logic > Split_U0_ap_done;
    sc_signal< sc_logic > Split_U0_ap_continue;
    sc_signal< sc_logic > Split_U0_ap_idle;
    sc_signal< sc_logic > Split_U0_ap_ready;
    sc_signal< sc_logic > Split_U0_start_out;
    sc_signal< sc_logic > Split_U0_start_write;
    sc_signal< sc_logic > Split_U0_src_rows_V_read;
    sc_signal< sc_logic > Split_U0_src_cols_V_read;
    sc_signal< sc_logic > Split_U0_src_data_stream_0_V_read;
    sc_signal< sc_logic > Split_U0_src_data_stream_1_V_read;
    sc_signal< sc_logic > Split_U0_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > Split_U0_dst0_data_stream_V_din;
    sc_signal< sc_logic > Split_U0_dst0_data_stream_V_write;
    sc_signal< sc_lv<8> > Split_U0_dst1_data_stream_V_din;
    sc_signal< sc_logic > Split_U0_dst1_data_stream_V_write;
    sc_signal< sc_lv<8> > Split_U0_dst2_data_stream_V_din;
    sc_signal< sc_logic > Split_U0_dst2_data_stream_V_write;
    sc_signal< sc_logic > GaussianBlur162_U0_ap_start;
    sc_signal< sc_logic > GaussianBlur162_U0_ap_done;
    sc_signal< sc_logic > GaussianBlur162_U0_ap_continue;
    sc_signal< sc_logic > GaussianBlur162_U0_ap_idle;
    sc_signal< sc_logic > GaussianBlur162_U0_ap_ready;
    sc_signal< sc_logic > GaussianBlur162_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > GaussianBlur162_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > GaussianBlur162_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > GaussianBlur163_U0_ap_start;
    sc_signal< sc_logic > GaussianBlur163_U0_ap_done;
    sc_signal< sc_logic > GaussianBlur163_U0_ap_continue;
    sc_signal< sc_logic > GaussianBlur163_U0_ap_idle;
    sc_signal< sc_logic > GaussianBlur163_U0_ap_ready;
    sc_signal< sc_logic > GaussianBlur163_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > GaussianBlur163_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > GaussianBlur163_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > GaussianBlur_U0_ap_start;
    sc_signal< sc_logic > GaussianBlur_U0_ap_done;
    sc_signal< sc_logic > GaussianBlur_U0_ap_continue;
    sc_signal< sc_logic > GaussianBlur_U0_ap_idle;
    sc_signal< sc_logic > GaussianBlur_U0_ap_ready;
    sc_signal< sc_logic > GaussianBlur_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > GaussianBlur_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > GaussianBlur_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > Merge_U0_ap_start;
    sc_signal< sc_logic > Merge_U0_ap_done;
    sc_signal< sc_logic > Merge_U0_ap_continue;
    sc_signal< sc_logic > Merge_U0_ap_idle;
    sc_signal< sc_logic > Merge_U0_ap_ready;
    sc_signal< sc_logic > Merge_U0_start_out;
    sc_signal< sc_logic > Merge_U0_start_write;
    sc_signal< sc_logic > Merge_U0_src0_data_stream_V_read;
    sc_signal< sc_logic > Merge_U0_src1_data_stream_V_read;
    sc_signal< sc_logic > Merge_U0_src2_data_stream_V_read;
    sc_signal< sc_logic > Merge_U0_dst_rows_V_read;
    sc_signal< sc_logic > Merge_U0_dst_cols_V_read;
    sc_signal< sc_lv<8> > Merge_U0_dst_data_stream_0_V_din;
    sc_signal< sc_logic > Merge_U0_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > Merge_U0_dst_data_stream_1_V_din;
    sc_signal< sc_logic > Merge_U0_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > Merge_U0_dst_data_stream_2_V_din;
    sc_signal< sc_logic > Merge_U0_dst_data_stream_2_V_write;
    sc_signal< sc_lv<10> > Merge_U0_dst_rows_V_out_din;
    sc_signal< sc_logic > Merge_U0_dst_rows_V_out_write;
    sc_signal< sc_lv<11> > Merge_U0_dst_cols_V_out_din;
    sc_signal< sc_logic > Merge_U0_dst_cols_V_out_write;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_rows_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_cols_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_0_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_1_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_2_V_read;
    sc_signal< sc_lv<24> > Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
    sc_signal< sc_logic > Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
    sc_signal< sc_lv<3> > Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
    sc_signal< sc_lv<3> > Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > img_0_rows_V_c_full_n;
    sc_signal< sc_lv<10> > img_0_rows_V_c_dout;
    sc_signal< sc_logic > img_0_rows_V_c_empty_n;
    sc_signal< sc_logic > img_0_cols_V_c_full_n;
    sc_signal< sc_lv<11> > img_0_cols_V_c_dout;
    sc_signal< sc_logic > img_0_cols_V_c_empty_n;
    sc_signal< sc_logic > img_1_rows_V_c_full_n;
    sc_signal< sc_lv<10> > img_1_rows_V_c_dout;
    sc_signal< sc_logic > img_1_rows_V_c_empty_n;
    sc_signal< sc_logic > img_1_cols_V_c_full_n;
    sc_signal< sc_lv<11> > img_1_cols_V_c_dout;
    sc_signal< sc_logic > img_1_cols_V_c_empty_n;
    sc_signal< sc_logic > img_0_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_0_dout;
    sc_signal< sc_logic > img_0_data_stream_0_empty_n;
    sc_signal< sc_logic > img_0_data_stream_1_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_1_dout;
    sc_signal< sc_logic > img_0_data_stream_1_empty_n;
    sc_signal< sc_logic > img_0_data_stream_2_full_n;
    sc_signal< sc_lv<8> > img_0_data_stream_2_dout;
    sc_signal< sc_logic > img_0_data_stream_2_empty_n;
    sc_signal< sc_logic > img_0_rows_V_c20_full_n;
    sc_signal< sc_lv<10> > img_0_rows_V_c20_dout;
    sc_signal< sc_logic > img_0_rows_V_c20_empty_n;
    sc_signal< sc_logic > img_0_cols_V_c21_full_n;
    sc_signal< sc_lv<11> > img_0_cols_V_c21_dout;
    sc_signal< sc_logic > img_0_cols_V_c21_empty_n;
    sc_signal< sc_logic > img_B_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_B_data_stream_0_dout;
    sc_signal< sc_logic > img_B_data_stream_0_empty_n;
    sc_signal< sc_logic > img_G_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_G_data_stream_0_dout;
    sc_signal< sc_logic > img_G_data_stream_0_empty_n;
    sc_signal< sc_logic > img_R_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_R_data_stream_0_dout;
    sc_signal< sc_logic > img_R_data_stream_0_empty_n;
    sc_signal< sc_logic > img_B_f_data_stream_s_full_n;
    sc_signal< sc_lv<8> > img_B_f_data_stream_s_dout;
    sc_signal< sc_logic > img_B_f_data_stream_s_empty_n;
    sc_signal< sc_logic > img_G_f_data_stream_s_full_n;
    sc_signal< sc_lv<8> > img_G_f_data_stream_s_dout;
    sc_signal< sc_logic > img_G_f_data_stream_s_empty_n;
    sc_signal< sc_logic > img_R_f_data_stream_s_full_n;
    sc_signal< sc_lv<8> > img_R_f_data_stream_s_dout;
    sc_signal< sc_logic > img_R_f_data_stream_s_empty_n;
    sc_signal< sc_logic > img_1_data_stream_0_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_0_dout;
    sc_signal< sc_logic > img_1_data_stream_0_empty_n;
    sc_signal< sc_logic > img_1_data_stream_1_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_1_dout;
    sc_signal< sc_logic > img_1_data_stream_1_empty_n;
    sc_signal< sc_logic > img_1_data_stream_2_full_n;
    sc_signal< sc_lv<8> > img_1_data_stream_2_dout;
    sc_signal< sc_logic > img_1_data_stream_2_empty_n;
    sc_signal< sc_logic > img_1_rows_V_c22_full_n;
    sc_signal< sc_lv<10> > img_1_rows_V_c22_dout;
    sc_signal< sc_logic > img_1_rows_V_c22_empty_n;
    sc_signal< sc_logic > img_1_cols_V_c23_full_n;
    sc_signal< sc_lv<11> > img_1_cols_V_c23_dout;
    sc_signal< sc_logic > img_1_cols_V_c23_empty_n;
    sc_signal< sc_lv<1> > start_for_Merge_U0_din;
    sc_signal< sc_logic > start_for_Merge_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Merge_U0_dout;
    sc_signal< sc_logic > start_for_Merge_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Split_U0_din;
    sc_signal< sc_logic > start_for_Split_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Split_U0_dout;
    sc_signal< sc_logic > start_for_Split_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur162_U0_din;
    sc_signal< sc_logic > start_for_GaussianBlur162_U0_full_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur162_U0_dout;
    sc_signal< sc_logic > start_for_GaussianBlur162_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur163_U0_din;
    sc_signal< sc_logic > start_for_GaussianBlur163_U0_full_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur163_U0_dout;
    sc_signal< sc_logic > start_for_GaussianBlur163_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur_U0_din;
    sc_signal< sc_logic > start_for_GaussianBlur_U0_full_n;
    sc_signal< sc_lv<1> > start_for_GaussianBlur_U0_dout;
    sc_signal< sc_logic > start_for_GaussianBlur_U0_empty_n;
    sc_signal< sc_logic > GaussianBlur162_U0_start_full_n;
    sc_signal< sc_logic > GaussianBlur162_U0_start_write;
    sc_signal< sc_logic > GaussianBlur163_U0_start_full_n;
    sc_signal< sc_logic > GaussianBlur163_U0_start_write;
    sc_signal< sc_logic > GaussianBlur_U0_start_full_n;
    sc_signal< sc_logic > GaussianBlur_U0_start_write;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_din;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_dout;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_empty_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_write;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXIvideo2Mat_U0_ap_continue();
    void thread_AXIvideo2Mat_U0_ap_start();
    void thread_Block_proc_U0_ap_continue();
    void thread_Block_proc_U0_ap_start();
    void thread_GaussianBlur162_U0_ap_continue();
    void thread_GaussianBlur162_U0_ap_start();
    void thread_GaussianBlur162_U0_start_full_n();
    void thread_GaussianBlur162_U0_start_write();
    void thread_GaussianBlur163_U0_ap_continue();
    void thread_GaussianBlur163_U0_ap_start();
    void thread_GaussianBlur163_U0_start_full_n();
    void thread_GaussianBlur163_U0_start_write();
    void thread_GaussianBlur_U0_ap_continue();
    void thread_GaussianBlur_U0_ap_start();
    void thread_GaussianBlur_U0_start_full_n();
    void thread_GaussianBlur_U0_start_write();
    void thread_INPUT_STREAM_TREADY();
    void thread_Mat2AXIvideo_U0_ap_continue();
    void thread_Mat2AXIvideo_U0_ap_start();
    void thread_Mat2AXIvideo_U0_start_full_n();
    void thread_Mat2AXIvideo_U0_start_write();
    void thread_Merge_U0_ap_continue();
    void thread_Merge_U0_ap_start();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_Split_U0_ap_continue();
    void thread_Split_U0_ap_start();
    void thread_Split_U0_start_full_n();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_start_for_GaussianBlur162_U0_din();
    void thread_start_for_GaussianBlur163_U0_din();
    void thread_start_for_GaussianBlur_U0_din();
    void thread_start_for_Mat2AXIvideo_U0_din();
    void thread_start_for_Merge_U0_din();
    void thread_start_for_Split_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
