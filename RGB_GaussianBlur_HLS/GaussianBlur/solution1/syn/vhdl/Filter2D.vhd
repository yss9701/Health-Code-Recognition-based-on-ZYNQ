-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_1E2 : STD_LOGIC_VECTOR (8 downto 0) := "111100010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_1E0 : STD_LOGIC_VECTOR (9 downto 0) := "0111100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv10_3FE : STD_LOGIC_VECTOR (9 downto 0) := "1111111110";
    constant ap_const_lv10_3FD : STD_LOGIC_VECTOR (9 downto 0) := "1111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_322 : STD_LOGIC_VECTOR (9 downto 0) := "1100100010";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_320 : STD_LOGIC_VECTOR (10 downto 0) := "01100100000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_63E : STD_LOGIC_VECTOR (11 downto 0) := "011000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv21_1171 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000101110001";
    constant ap_const_lv19_3A8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110101000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1463 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1419 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal or_cond_i_reg_1506 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1506_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_4_reg_305 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond461_i_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_326_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_V_reg_1414 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_0_not_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_0_not_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_1_reg_1437 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_8_0_t_fu_526_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_0_t_reg_1448 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_fu_564_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_reg_1453 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_fu_602_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_reg_1458 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op147_read_state4 : BOOLEAN;
    signal ap_predicate_op158_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1463_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_618_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_760_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_1476 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1481 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1488 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_addr_reg_1494 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1500 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_cond_i_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1506_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_6_fu_908_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1510 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_926_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1516 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_944_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_41_1_1_fu_1300_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_41_1_1_reg_1528 : STD_LOGIC_VECTOR (20 downto 0);
    signal src_kernel_win_0_va_16_reg_1533 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_V_2_fu_1126_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_V_2_reg_1538 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1325_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp5_reg_1543 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_294 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_22_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_816_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_cast_fu_316_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_378_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_382_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_428_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_p2_i497_i_fu_434_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_442_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_6_1_fu_458_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_assign_6_2_fu_484_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_452_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i496_i_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_cast_fu_388_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i497_i_p_assign_8_fu_510_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_fu_518_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_480_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_538_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_36_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_548_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_532_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_556_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_506_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_576_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_582_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_570_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_594_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_624_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_4_cast_fu_608_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ImagLoc_x_fu_640_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_fu_650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_684_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i_i_fu_690_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i_i_cast_fu_702_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_cast_fu_646_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_2_fu_712_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_3_fu_718_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_not_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast6_fu_698_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp_cast_fu_726_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_fu_748_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_1_t_fu_799_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_804_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_823_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_842_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_897_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_915_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_933_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_fu_985_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_fu_997_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_993_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_cast_fu_1005_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_0_1_fu_1009_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_0_1_cast_fu_1015_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1306_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl3_fu_1029_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl4_fu_1041_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1037_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_1049_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_1_fu_1053_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_1_cast_fu_1059_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl5_fu_1067_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl6_fu_1078_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_cast_fu_1074_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_cast_fu_1085_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_1_2_fu_1089_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_1_2_cast_fu_1095_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_306_1_cast_fu_1063_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_V_0_2_cast_fu_1026_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1317_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_306_1_2_cast_cas_fu_1099_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp4_cast_fu_1113_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp3_fu_1116_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp2_fu_1107_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp3_cast_fu_1122_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl_fu_1132_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl7_fu_1144_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_cast_fu_1140_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl7_cast_fu_1152_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_2_1_fu_1156_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_41_2_1_cast_fu_1162_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_V_2_cast_fu_1201_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp5_cast_fu_1204_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_s_fu_1207_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_46_fu_1223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_cast_fu_1231_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1213_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_1241_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_fu_1257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_1271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_1_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_41_1_1_fu_1300_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_41_1_1_fu_1300_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1306_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1306_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1306_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1317_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1317_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1325_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1325_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1325_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_137 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op152_store_state4 : BOOLEAN;
    signal ap_enable_operation_152 : BOOLEAN;
    signal ap_predicate_op159_store_state4 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_enable_operation_113 : BOOLEAN;
    signal ap_enable_operation_141 : BOOLEAN;
    signal ap_predicate_op150_store_state4 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op157_store_state4 : BOOLEAN;
    signal ap_enable_operation_157 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_predicate_op148_store_state4 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op156_store_state4 : BOOLEAN;
    signal ap_enable_operation_156 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1306_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1306_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1306_p30 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1317_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1325_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1325_p20 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_41_1_1_fu_1300_p10 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_condition_999 : BOOLEAN;

    component ov5640_GaussianBleOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ov5640_GaussianBlfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component ov5640_GaussianBlg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component ov5640_GaussianBlhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component ov5640_GaussianBlibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    ov5640_GaussianBleOg_U27 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_192,
        din1 => right_border_buf_0_1_fu_196,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_fu_799_p2,
        dout => tmp_23_fu_804_p5);

    ov5640_GaussianBleOg_U28 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_204,
        din1 => right_border_buf_0_4_fu_208,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_fu_799_p2,
        dout => tmp_24_fu_823_p5);

    ov5640_GaussianBleOg_U29 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_212,
        din1 => right_border_buf_0_2_fu_200,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_t_fu_799_p2,
        dout => tmp_25_fu_842_p5);

    ov5640_GaussianBleOg_U30 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_816_p3,
        din1 => col_buf_0_val_1_0_fu_835_p3,
        din2 => col_buf_0_val_2_0_fu_854_p3,
        din3 => row_assign_8_0_t_reg_1448,
        dout => tmp_26_fu_897_p5);

    ov5640_GaussianBleOg_U31 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_816_p3,
        din1 => col_buf_0_val_1_0_fu_835_p3,
        din2 => col_buf_0_val_2_0_fu_854_p3,
        din3 => row_assign_8_1_t_reg_1453,
        dout => tmp_30_fu_915_p5);

    ov5640_GaussianBleOg_U32 : component ov5640_GaussianBleOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_816_p3,
        din1 => col_buf_0_val_1_0_fu_835_p3,
        din2 => col_buf_0_val_2_0_fu_854_p3,
        din3 => row_assign_8_2_t_reg_1458,
        dout => tmp_33_fu_933_p5);

    ov5640_GaussianBlfYi_U33 : component ov5640_GaussianBlfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_41_1_1_fu_1300_p0,
        din1 => r_V_41_1_1_fu_1300_p1,
        dout => r_V_41_1_1_fu_1300_p2);

    ov5640_GaussianBlg8j_U34 : component ov5640_GaussianBlg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        din3_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1306_p0,
        din1 => grp_fu_1306_p1,
        din2 => grp_fu_1306_p2,
        din3 => grp_fu_1306_p3,
        dout => grp_fu_1306_p4);

    ov5640_GaussianBlhbi_U35 : component ov5640_GaussianBlhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1317_p0,
        din1 => grp_fu_1317_p1,
        din2 => r_V_41_1_1_reg_1528,
        dout => grp_fu_1317_p3);

    ov5640_GaussianBlibs_U36 : component ov5640_GaussianBlibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1325_p0,
        din1 => grp_fu_1325_p1,
        din2 => grp_fu_1325_p2,
        dout => grp_fu_1325_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_612_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((exitcond461_i_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_4_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_4_reg_305 <= j_V_fu_618_p2;
            elsif (((exitcond461_i_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_4_reg_305 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    t_V_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                t_V_reg_294 <= i_V_reg_1414;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_294 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1481 <= brmerge_fu_764_p2;
                k_buf_0_val_3_addr_reg_1488 <= tmp_22_fu_769_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1494 <= tmp_22_fu_769_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1500 <= tmp_22_fu_769_p1(10 - 1 downto 0);
                or_cond_i_i_reg_1472 <= or_cond_i_i_fu_670_p2;
                or_cond_i_reg_1506 <= or_cond_i_fu_776_p2;
                tmp_43_reg_1476 <= tmp_43_fu_760_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond460_i_reg_1463 <= exitcond460_i_fu_612_p2;
                exitcond460_i_reg_1463_pp0_iter1_reg <= exitcond460_i_reg_1463;
                or_cond_i_reg_1506_pp0_iter1_reg <= or_cond_i_reg_1506;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1414 <= i_V_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1428 <= icmp_fu_354_p2;
                row_assign_8_0_t_reg_1448 <= row_assign_8_0_t_fu_526_p2;
                row_assign_8_1_t_reg_1453 <= row_assign_8_1_t_fu_564_p2;
                row_assign_8_2_t_reg_1458 <= row_assign_8_2_t_fu_602_p2;
                tmp_1_reg_1433 <= tmp_1_fu_360_p2;
                tmp_220_0_not_reg_1423 <= tmp_220_0_not_fu_338_p2;
                tmp_264_1_reg_1437 <= tmp_264_1_fu_366_p2;
                tmp_2_reg_1441 <= tmp_2_fu_372_p2;
                tmp_5_reg_1419 <= tmp_5_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_i_reg_1506_pp0_iter2_reg <= or_cond_i_reg_1506_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1506 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_41_1_1_reg_1528 <= r_V_41_1_1_fu_1300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_196 <= right_border_buf_0_s_fu_192;
                right_border_buf_0_2_fu_200 <= right_border_buf_0_5_fu_212;
                right_border_buf_0_3_fu_204 <= col_buf_0_val_1_0_fu_835_p3;
                right_border_buf_0_4_fu_208 <= right_border_buf_0_3_fu_204;
                right_border_buf_0_5_fu_212 <= col_buf_0_val_2_0_fu_854_p3;
                right_border_buf_0_s_fu_192 <= col_buf_0_val_0_0_fu_816_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1533 <= src_kernel_win_0_va_2_fu_176;
                src_kernel_win_0_va_6_reg_1510 <= src_kernel_win_0_va_6_fu_908_p3;
                src_kernel_win_0_va_7_reg_1516 <= src_kernel_win_0_va_7_fu_926_p3;
                src_kernel_win_0_va_8_reg_1522 <= src_kernel_win_0_va_8_fu_944_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1463_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_172 <= src_kernel_win_0_va_fu_168;
                src_kernel_win_0_va_3_fu_180 <= src_kernel_win_0_va_16_reg_1533;
                src_kernel_win_0_va_4_fu_184 <= src_kernel_win_0_va_8_reg_1522;
                src_kernel_win_0_va_5_fu_188 <= src_kernel_win_0_va_4_fu_184;
                src_kernel_win_0_va_fu_168 <= src_kernel_win_0_va_6_reg_1510;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_176 <= src_kernel_win_0_va_7_fu_926_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1506_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_2_reg_1538 <= sum_V_2_fu_1126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1506_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp5_reg_1543 <= grp_fu_1325_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, exitcond461_i_fu_320_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_640_p2),12));

    ImagLoc_x_fu_640_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(t_V_4_cast_fu_608_p1));
    Range1_all_zeros_fu_1251_p2 <= "1" when (tmp_34_fu_1241_p4 = ap_const_lv5_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1506_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1506_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1506_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter3_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1506_pp0_iter2_reg)
    begin
                ap_block_state6_pp0_stage0_iter3 <= ((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_999_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1463, or_cond_i_i_reg_1472)
    begin
                ap_condition_999 <= ((or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond461_i_fu_320_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond461_i_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_111_assign_proc : process(exitcond460_i_fu_612_p2)
    begin
                ap_enable_operation_111 <= (exitcond460_i_fu_612_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_113_assign_proc : process(exitcond460_i_fu_612_p2)
    begin
                ap_enable_operation_113 <= (exitcond460_i_fu_612_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_115_assign_proc : process(exitcond460_i_fu_612_p2)
    begin
                ap_enable_operation_115 <= (exitcond460_i_fu_612_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_137_assign_proc : process(exitcond460_i_reg_1463)
    begin
                ap_enable_operation_137 <= (exitcond460_i_reg_1463 = ap_const_lv1_0);
    end process;


    ap_enable_operation_141_assign_proc : process(exitcond460_i_reg_1463)
    begin
                ap_enable_operation_141 <= (exitcond460_i_reg_1463 = ap_const_lv1_0);
    end process;


    ap_enable_operation_144_assign_proc : process(exitcond460_i_reg_1463)
    begin
                ap_enable_operation_144 <= (exitcond460_i_reg_1463 = ap_const_lv1_0);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state4)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_store_state4)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_152_assign_proc : process(ap_predicate_op152_store_state4)
    begin
                ap_enable_operation_152 <= (ap_predicate_op152_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_156_assign_proc : process(ap_predicate_op156_store_state4)
    begin
                ap_enable_operation_156 <= (ap_predicate_op156_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_157_assign_proc : process(ap_predicate_op157_store_state4)
    begin
                ap_enable_operation_157 <= (ap_predicate_op157_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_159_assign_proc : process(ap_predicate_op159_store_state4)
    begin
                ap_enable_operation_159 <= (ap_predicate_op159_store_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state3_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op147_read_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428)
    begin
                ap_predicate_op147_read_state4 <= ((or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_1_reg_1433)
    begin
                ap_predicate_op148_store_state4 <= ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op150_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_264_1_reg_1437)
    begin
                ap_predicate_op150_store_state4 <= ((tmp_264_1_reg_1437 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_1_reg_1433)
    begin
                ap_predicate_op152_store_state4 <= ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op156_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419)
    begin
                ap_predicate_op156_store_state4 <= ((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op157_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419)
    begin
                ap_predicate_op157_store_state4 <= ((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op158_read_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419)
    begin
                ap_predicate_op158_read_state4 <= ((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_predicate_op159_store_state4_assign_proc : process(exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419)
    begin
                ap_predicate_op159_store_state4 <= ((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond461_i_fu_320_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_320_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_764_p2 <= (tmp_8_fu_664_p2 or tmp_220_0_not_reg_1423);
    col_assign_1_t_fu_799_p2 <= (tmp_43_reg_1476 xor ap_const_lv2_3);
        col_assign_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_748_p3),32));

    col_buf_0_val_0_0_fu_816_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1481(0) = '1') else 
        tmp_23_fu_804_p5;
    col_buf_0_val_1_0_fu_835_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1481(0) = '1') else 
        tmp_24_fu_823_p5;
    col_buf_0_val_2_0_fu_854_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1481(0) = '1') else 
        tmp_25_fu_842_p5;
    deleted_zeros_fu_1285_p2 <= (not_carry_1_fu_1279_p2 and Range1_all_zeros_fu_1251_p2);
    exitcond460_i_fu_612_p2 <= "1" when (t_V_4_reg_305 = ap_const_lv10_322) else "0";
    exitcond461_i_fu_320_p2 <= "1" when (t_V_reg_294 = ap_const_lv9_1E2) else "0";
    grp_fu_1306_p0 <= grp_fu_1306_p00(8 - 1 downto 0);
    grp_fu_1306_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1522),9));
    grp_fu_1306_p1 <= grp_fu_1306_p10(8 - 1 downto 0);
    grp_fu_1306_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_188),9));
    grp_fu_1306_p2 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1306_p3 <= grp_fu_1306_p30(24 - 1 downto 0);
    grp_fu_1306_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_41_0_1_cast_fu_1015_p1),25));
    grp_fu_1317_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1317_p1 <= grp_fu_1317_p10(8 - 1 downto 0);
    grp_fu_1317_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_172),19));
    grp_fu_1325_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1325_p1 <= grp_fu_1325_p10(8 - 1 downto 0);
    grp_fu_1325_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1510),19));
    grp_fu_1325_p2 <= grp_fu_1325_p20(24 - 1 downto 0);
    grp_fu_1325_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_41_2_1_cast_fu_1162_p1),25));
    i_V_fu_326_p2 <= std_logic_vector(unsigned(t_V_reg_294) + unsigned(ap_const_lv9_1));
    icmp1_fu_634_p2 <= "0" when (tmp_40_fu_624_p4 = ap_const_lv9_0) else "1";
    icmp_fu_354_p2 <= "0" when (tmp_7_fu_344_p4 = ap_const_lv8_0) else "1";
    j_V_fu_618_p2 <= std_logic_vector(unsigned(t_V_4_reg_305) + unsigned(ap_const_lv10_1));
    k_buf_0_val_3_address0 <= tmp_22_fu_769_p1(10 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1488;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_1_reg_1433, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_1_reg_1433, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_22_fu_769_p1(10 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1494;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_264_1_reg_1437, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_264_1_reg_1437 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1428, tmp_5_reg_1419, tmp_264_1_reg_1437, k_buf_0_val_3_q0, ap_condition_999)
    begin
        if ((ap_const_boolean_1 = ap_condition_999)) then
            if (((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_264_1_reg_1437 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_264_1_reg_1437, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_264_1_reg_1437 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_22_fu_769_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1500;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_1_reg_1433, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1428, tmp_5_reg_1419, tmp_1_reg_1433, k_buf_0_val_4_q0, ap_condition_999)
    begin
        if ((ap_const_boolean_1 = ap_condition_999)) then
            if (((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_1_reg_1433 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419, tmp_1_reg_1433, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_1_reg_1433 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_carry_1_fu_1279_p2 <= (tmp_48_fu_1271_p3 or rev2_fu_1265_p2);
    or_cond_i496_i_fu_414_p2 <= (tmp_s_fu_408_p2 and rev_fu_402_p2);
    or_cond_i_fu_776_p2 <= (icmp_reg_1428 and icmp1_fu_634_p2);
    or_cond_i_i_fu_670_p2 <= (tmp_8_fu_664_p2 and rev1_fu_658_p2);
    p_Val2_1_fu_1213_p4 <= p_Val2_s_fu_1207_p2(21 downto 14);
    p_Val2_2_fu_1235_p2 <= std_logic_vector(unsigned(tmp_2_i_i_cast_fu_1231_p1) + unsigned(p_Val2_1_fu_1213_p4));
    p_Val2_s_fu_1207_p2 <= std_logic_vector(unsigned(sum_V_2_cast_fu_1201_p1) + unsigned(tmp5_cast_fu_1204_p1));
    p_assign_1_fu_684_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(t_V_4_cast_fu_608_p1));
    p_assign_2_fu_712_p2 <= std_logic_vector(unsigned(ap_const_lv12_63E) - unsigned(p_p2_i_i_cast_fu_702_p1));
    p_assign_3_fu_718_p3 <= 
        ImagLoc_x_cast_fu_646_p1 when (or_cond_i_i_fu_670_p2(0) = '1') else 
        p_assign_2_fu_712_p2;
    p_assign_6_1_fu_458_p2 <= std_logic_vector(signed(ap_const_lv10_3FE) + signed(t_V_cast_fu_316_p1));
    p_assign_6_2_fu_484_p2 <= std_logic_vector(signed(ap_const_lv10_3FD) + signed(t_V_cast_fu_316_p1));
    p_assign_7_fu_428_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) - unsigned(t_V_cast_fu_316_p1));
    p_assign_8_fu_452_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_14_fu_442_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, or_cond_i_reg_1506_pp0_iter2_reg)
    begin
        if (((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_2_fu_1235_p2 when (deleted_zeros_fu_1285_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, or_cond_i_reg_1506_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1506_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_p2_i497_i_fu_434_p3 <= 
        p_assign_7_fu_428_p2 when (tmp_13_fu_420_p3(0) = '1') else 
        tmp_3_fu_382_p2;
    p_p2_i497_i_p_assign_8_fu_510_p3 <= 
        tmp_14_fu_442_p1 when (tmp_4_fu_446_p2(0) = '1') else 
        p_assign_8_fu_452_p2;
        p_p2_i_i_cast6_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_690_p3),13));

        p_p2_i_i_cast_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_690_p3),12));

    p_p2_i_i_fu_690_p3 <= 
        p_assign_1_fu_684_p2 when (tmp_42_fu_676_p3(0) = '1') else 
        ImagLoc_x_fu_640_p2;
    p_shl1_cast_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_985_p3),20));
    p_shl1_fu_985_p3 <= (src_kernel_win_0_va_4_fu_184 & ap_const_lv11_0);
    p_shl2_cast_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_997_p3),20));
    p_shl2_fu_997_p3 <= (src_kernel_win_0_va_4_fu_184 & ap_const_lv2_0);
    p_shl3_cast_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_1029_p3),20));
    p_shl3_fu_1029_p3 <= (src_kernel_win_0_va_3_fu_180 & ap_const_lv11_0);
    p_shl4_cast_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_1041_p3),20));
    p_shl4_fu_1041_p3 <= (src_kernel_win_0_va_3_fu_180 & ap_const_lv2_0);
    p_shl5_cast_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_1067_p3),20));
    p_shl5_fu_1067_p3 <= (src_kernel_win_0_va_7_reg_1516 & ap_const_lv11_0);
    p_shl6_cast_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_fu_1078_p3),20));
    p_shl6_fu_1078_p3 <= (src_kernel_win_0_va_7_reg_1516 & ap_const_lv2_0);
    p_shl7_cast_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_1144_p3),20));
    p_shl7_fu_1144_p3 <= (src_kernel_win_0_va_fu_168 & ap_const_lv2_0);
    p_shl_cast_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1132_p3),20));
    p_shl_fu_1132_p3 <= (src_kernel_win_0_va_fu_168 & ap_const_lv11_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1463, or_cond_i_i_reg_1472, icmp_reg_1428, tmp_5_reg_1419)
    begin
        if ((((tmp_5_reg_1419 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_1) and (or_cond_i_i_reg_1472 = ap_const_lv1_1) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((or_cond_i_i_reg_1472 = ap_const_lv1_1) and (icmp_reg_1428 = ap_const_lv1_0) and (exitcond460_i_reg_1463 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

        r_V_41_0_1_cast_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_0_1_fu_1009_p2),24));

    r_V_41_0_1_fu_1009_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_993_p1) - unsigned(p_shl2_cast_fu_1005_p1));
    r_V_41_1_1_fu_1300_p0 <= ap_const_lv21_1171(14 - 1 downto 0);
    r_V_41_1_1_fu_1300_p1 <= r_V_41_1_1_fu_1300_p10(8 - 1 downto 0);
    r_V_41_1_1_fu_1300_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_176),21));
        r_V_41_1_2_cast_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_1_2_fu_1089_p2),24));

    r_V_41_1_2_fu_1089_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1074_p1) - unsigned(p_shl6_cast_fu_1085_p1));
        r_V_41_1_cast_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_1_fu_1053_p2),24));

    r_V_41_1_fu_1053_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1037_p1) - unsigned(p_shl4_cast_fu_1049_p1));
        r_V_41_2_1_cast_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_2_1_fu_1156_p2),24));

    r_V_41_2_1_fu_1156_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1140_p1) - unsigned(p_shl7_cast_fu_1152_p1));
    rev1_fu_658_p2 <= (tmp_41_fu_650_p3 xor ap_const_lv1_1);
    rev2_fu_1265_p2 <= (tmp_47_fu_1257_p3 xor ap_const_lv1_1);
    rev_fu_402_p2 <= (tmp_12_fu_394_p3 xor ap_const_lv1_1);
    row_assign_8_0_t_fu_526_p2 <= (y_fu_518_p3 xor ap_const_lv2_3);
    row_assign_8_1_t_fu_564_p2 <= (tmp_18_fu_556_p3 xor ap_const_lv2_3);
    row_assign_8_2_t_fu_602_p2 <= (tmp_31_fu_594_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_736_p2 <= (tmp_8_not_fu_730_p2 or tmp_41_fu_650_p3);
    sel_tmp8_fu_742_p2 <= (tmp_10_fu_706_p2 and sel_tmp7_fu_736_p2);
    sel_tmp_cast_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_3_fu_718_p3),13));
    src_kernel_win_0_va_6_fu_908_p3 <= 
        tmp_26_fu_897_p5 when (tmp_2_reg_1441(0) = '1') else 
        col_buf_0_val_0_0_fu_816_p3;
    src_kernel_win_0_va_7_fu_926_p3 <= 
        tmp_30_fu_915_p5 when (tmp_2_reg_1441(0) = '1') else 
        col_buf_0_val_1_0_fu_835_p3;
    src_kernel_win_0_va_8_fu_944_p3 <= 
        tmp_33_fu_933_p5 when (tmp_2_reg_1441(0) = '1') else 
        col_buf_0_val_2_0_fu_854_p3;
    sum_V_0_2_cast_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1306_p4),26));
    sum_V_2_cast_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V_2_reg_1538),27));
    sum_V_2_fu_1126_p2 <= std_logic_vector(unsigned(tmp2_fu_1107_p2) + unsigned(tmp3_cast_fu_1122_p1));
    t_V_4_cast_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_305),11));
    t_V_cast_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_294),10));
    tmp2_fu_1107_p2 <= std_logic_vector(unsigned(tmp_306_1_cast_fu_1063_p1) + unsigned(sum_V_0_2_cast_fu_1026_p1));
    tmp3_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1116_p2),26));
    tmp3_fu_1116_p2 <= std_logic_vector(unsigned(tmp_306_1_2_cast_cas_fu_1099_p1) + unsigned(tmp4_cast_fu_1113_p1));
    tmp4_cast_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1317_p3),25));
    tmp5_cast_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_reg_1543),27));
    tmp_10_fu_706_p2 <= "1" when (signed(p_p2_i_i_fu_690_p3) < signed(ap_const_lv11_320)) else "0";
    tmp_11_fu_548_p3 <= 
        tmp_32_fu_538_p2 when (tmp_16_fu_472_p3(0) = '1') else 
        tmp_36_fu_544_p1;
    tmp_12_fu_394_p3 <= tmp_3_fu_382_p2(9 downto 9);
    tmp_13_fu_420_p3 <= tmp_3_fu_382_p2(9 downto 9);
    tmp_14_fu_442_p1 <= p_p2_i497_i_fu_434_p3(2 - 1 downto 0);
    tmp_15_fu_464_p3 <= p_assign_6_1_fu_458_p2(9 downto 9);
    tmp_16_fu_472_p3 <= p_assign_6_1_fu_458_p2(9 downto 9);
    tmp_17_fu_480_p1 <= t_V_reg_294(2 - 1 downto 0);
    tmp_18_fu_556_p3 <= 
        tmp_11_fu_548_p3 when (tmp_15_fu_464_p3(0) = '1') else 
        tmp_6_fu_532_p2;
    tmp_19_fu_490_p3 <= p_assign_6_2_fu_484_p2(9 downto 9);
    tmp_1_fu_360_p2 <= "1" when (t_V_reg_294 = ap_const_lv9_1) else "0";
    tmp_21_fu_498_p3 <= p_assign_6_2_fu_484_p2(9 downto 9);
    tmp_220_0_not_fu_338_p2 <= (tmp_5_fu_332_p2 xor ap_const_lv1_1);
    tmp_22_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_756_p1),64));
    tmp_264_1_fu_366_p2 <= "1" when (t_V_reg_294 = ap_const_lv9_0) else "0";
    tmp_27_fu_506_p1 <= t_V_reg_294(2 - 1 downto 0);
    tmp_28_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_9_fu_378_p1));
    tmp_29_fu_586_p3 <= 
        tmp_38_fu_576_p2 when (tmp_21_fu_498_p3(0) = '1') else 
        tmp_39_fu_582_p1;
    tmp_2_fu_372_p2 <= "1" when (unsigned(t_V_reg_294) > unsigned(ap_const_lv9_1E0)) else "0";
    tmp_2_i_i_cast_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_1223_p3),8));
    tmp_306_1_2_cast_cas_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_41_1_2_cast_fu_1095_p1),25));
    tmp_306_1_cast_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_41_1_cast_fu_1059_p1),26));
    tmp_30_cast_fu_388_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_9_fu_378_p1));
    tmp_31_fu_594_p3 <= 
        tmp_29_fu_586_p3 when (tmp_19_fu_490_p3(0) = '1') else 
        tmp_28_fu_570_p2;
    tmp_32_fu_538_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_17_fu_480_p1));
    tmp_34_fu_1241_p4 <= p_Val2_s_fu_1207_p2(26 downto 22);
    tmp_36_fu_544_p1 <= p_assign_6_1_fu_458_p2(2 - 1 downto 0);
    tmp_38_fu_576_p2 <= (tmp_27_fu_506_p1 xor ap_const_lv2_3);
    tmp_39_fu_582_p1 <= p_assign_6_2_fu_484_p2(2 - 1 downto 0);
    tmp_3_fu_382_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(t_V_cast_fu_316_p1));
    tmp_40_fu_624_p4 <= t_V_4_reg_305(9 downto 1);
    tmp_41_fu_650_p3 <= ImagLoc_x_fu_640_p2(10 downto 10);
    tmp_42_fu_676_p3 <= ImagLoc_x_fu_640_p2(10 downto 10);
    tmp_43_fu_760_p1 <= x_fu_748_p3(2 - 1 downto 0);
    tmp_46_fu_1223_p3 <= p_Val2_s_fu_1207_p2(13 downto 13);
    tmp_47_fu_1257_p3 <= p_Val2_s_fu_1207_p2(21 downto 21);
    tmp_48_fu_1271_p3 <= p_Val2_2_fu_1235_p2(7 downto 7);
    tmp_4_fu_446_p2 <= "1" when (signed(p_p2_i497_i_fu_434_p3) < signed(ap_const_lv10_1E0)) else "0";
    tmp_5_fu_332_p2 <= "1" when (unsigned(t_V_reg_294) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_6_fu_532_p2 <= (tmp_9_fu_378_p1 xor ap_const_lv2_2);
    tmp_7_fu_344_p4 <= t_V_reg_294(8 downto 1);
    tmp_8_fu_664_p2 <= "1" when (signed(ImagLoc_x_fu_640_p2) < signed(ap_const_lv11_320)) else "0";
    tmp_8_not_fu_730_p2 <= (tmp_8_fu_664_p2 xor ap_const_lv1_1);
    tmp_9_fu_378_p1 <= t_V_reg_294(2 - 1 downto 0);
    tmp_s_fu_408_p2 <= "1" when (signed(tmp_3_fu_382_p2) < signed(ap_const_lv10_1E0)) else "0";
    x_fu_748_p3 <= 
        p_p2_i_i_cast6_fu_698_p1 when (sel_tmp8_fu_742_p2(0) = '1') else 
        sel_tmp_cast_fu_726_p1;
    y_fu_518_p3 <= 
        tmp_30_cast_fu_388_p2 when (or_cond_i496_i_fu_414_p2(0) = '1') else 
        p_p2_i497_i_p_assign_8_fu_510_p3;
end behav;
